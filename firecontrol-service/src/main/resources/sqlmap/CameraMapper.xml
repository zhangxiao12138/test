<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.firecontrol.mapper.CameraMapper" >
    <resultMap id="BaseResultMap" type="com.firecontrol.domain.entity.CameraEntity" >
        <!-- column 对应数据库字段， property对应实体bean的属性 -->
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="ip" property="ip" jdbcType="VARCHAR" />
        <result column="port" property="port" jdbcType="INTEGER" />
        <result column="user" property="user" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="coding_protocal" property="codingProtocal" jdbcType="VARCHAR" />
        <result column="channel" property="channel" jdbcType="VARCHAR" />
        <result column="bitstream" property="bitstream" jdbcType="VARCHAR" />
        <result column="buffer" property="buffer" jdbcType="VARCHAR" />
        <result column="terminal_id" property="terminalId" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, `name`, ip, port, `user`, password, coding_protocal, channel, bitstream, buffer, terminal_id
    </sql>

    <insert id="insert" parameterType="com.firecontrol.domain.entity.CameraEntity" >
        insert into vod_connection_camera (`name`, ip, port, `user`, password, coding_protocal, channel, bitstream, buffer, terminal_id)
        values (#{name,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR},
        #{port,jdbcType=INTEGER}, #{user,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
         #{codingProtocal,jdbcType=VARCHAR}, #{channel,jdbcType=VARCHAR}, #{bitstream,jdbcType=VARCHAR},
         #{buffer,jdbcType=VARCHAR},#{terminalId,jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.firecontrol.domain.entity.CameraEntity">
        update vod_connection_camera
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="port != null">
                port = #{port,jdbcType=INTEGER},
            </if>
            <if test="user != null">
                user = #{user,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="channel != null">
                channel = #{channel,jdbcType=VARCHAR},
            </if>
            <if test="terminalId != null">
                terminal_id = #{terminalId,jdbcType=VARCHAR},
            </if>
            <if test="bitstream != null">
                bitstream = #{bitstream,jdbcType=VARCHAR},
            </if>
            <if test="buffer != null">
                buffer = #{buffer,jdbcType=VARCHAR},
            </if>
            <if test="codingProtocal != null">
                coding_protocal = #{codingProtocal,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>


    <select id="getCameraById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from vod_connection_camera
        where id = #{id}
    </select>

    <select id="getCameraListByTerminalId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from vod_connection_camera
        where terminal_id = #{terminalId}
    </select>

    <select id="getCameraIpCountByTerminalId" resultType="java.lang.Integer">
        select
        count(*)
        from vod_connection_camera
        where terminal_id = #{terminalId} and ip = #{ip}
    </select>

    <select id="getCameraByIpTerminalId" resultMap="BaseResultMap">
        select *
        from vod_connection_camera
        where terminal_id = #{terminalId} and ip = #{ip}
    </select>



    <select id="getTotal" parameterType="com.firecontrol.domain.entity.CameraEntity" resultType="java.lang.Integer">
        select
        count(*)
        from vod_connection_camera
    </select>

    <select id="getAllCameraList" resultMap="BaseResultMap">
        select *
        from vod_connection_camera
        order by id
        limit #{start}, #{length}
    </select>

    <select id="getAllCamera" resultMap="BaseResultMap">
        select *
        from vod_connection_camera
        order by id
    </select>

    <select id="getCameraListByName" parameterType="com.firecontrol.domain.entity.CameraEntity" resultMap="BaseResultMap" >
        select *
        from vod_connection_camera
        where `name` = #{name}
        <if test="id != null">
            and id != #{id}
        </if>
    </select>


    <delete id="deleteCamera" parameterType="java.util.List">
        delete from vod_connection_camera
        where id IN
        <foreach collection="idList" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>

    </delete>


    <select id="getCameraListByIds" resultMap="BaseResultMap" >
        select *
        from vod_connection_camera
        where id IN
        <foreach collection="idList" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>


</mapper>